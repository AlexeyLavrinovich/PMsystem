{
  "openapi": "3.0.2",
  "info": {
    "description": "This is a simple project management server.",
    "version": "0.0.1-SNAPSHOT",
    "title": "PMsystem"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Registration",
      "description": "Registration field for not authorize users"
    },
    {
      "name": "Project",
      "description": "All projects and work with them"
    },
    {
      "name": "Task",
      "description": "Work with project tasks"
    },
    {
      "name": "User",
      "description": "Operations about user (only for admin)"
    }
  ],
  "paths": {
    "/registration": {
      "get": {
        "tags": [
          "Registration"
        ],
        "summary": "Send a message, what you should add",
        "description": "Registration page",
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Set your name and password"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bad_request"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Send you username and password",
        "requestBody": {
          "$ref": "#/components/requestBodies/send_user"
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User was successfully add!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/already_exists_request"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Show all projects",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "example": 0
            },
            "required": false,
            "description": "Num of page"
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "example": 5
            },
            "required": false,
            "description": "Num of projects on the page"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "id"
            },
            "required": false,
            "description": "Sorting parametr"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/project"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bad_request"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Add new project",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Creator id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/send_project"
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Project was successfully create!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/already_exists_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/project/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Show project by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "Project id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/project"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bad_request"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Rename project",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "Project id"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "User id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/send_project"
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Project was successfully renamed!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/already_exists_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete project",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "Project id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Project was successfully delete!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/projects/{projectId}/tasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Show project tasks",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "example": 0
            },
            "required": false,
            "description": "Num of page"
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "example": 5
            },
            "required": false,
            "description": "Num of projects on the page"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "id"
            },
            "required": false,
            "description": "Sorting parametr"
          },
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "string",
              "example": 1
            },
            "required": true,
            "description": "Project id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/task"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bad_request"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/projects/{projectId}/add": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Add a task to project",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "string",
              "example": 1
            },
            "required": true,
            "description": "Project id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/send_task"
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Task was successfully create!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/projects/{projectId}/update": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update task",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "Project id"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "Task id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/send_task"
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Task was successfully update!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/projects/{projectId}/delete": {
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Delete task",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "Project id"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "Task id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Task was successfully delete!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Show all users",
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Show user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user role to admin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User was successfully updated!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User was successfully delete!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bad_request"
                    },
                    {
                      "$ref": "#/components/schemas/not_found_request"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basic_auth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "requestBodies": {
      "send_user": {
        "description": "Send your username and password",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Alex"
                },
                "password": {
                  "type": "string",
                  "example": "123"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        }
      },
      "send_project": {
        "description": "Send project name",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "First App"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        }
      },
      "send_task": {
        "description": "Send task",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "string",
                  "example": "Do something"
                }
              },
              "required": [
                "task"
              ]
            }
          }
        }
      }
    },
    "schemas": {
      "task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "task": {
            "type": "string",
            "example": "Make a cake"
          }
        }
      },
      "project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "First App"
          },
          "description": {
            "type": "string",
            "example": "My first try to create app"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task"
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "Alex"
          },
          "password": {
            "type": "string",
            "example": "123"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/role"
            }
          }
        }
      },
      "role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "ROLE_USER",
              "ROLE_ADMIN"
            ]
          }
        }
      },
      "bad_request": {
        "title": "Something wrong",
        "type": "string",
        "example": "Something bad happend..."
      },
      "not_found_request": {
        "title": "Not found",
        "oneOf": [
          {
            "type": "string",
            "example": "Can't find user!"
          },
          {
            "type": "string",
            "example": "Can't find project!"
          }
        ]
      },
      "already_exists_request": {
        "title": "Already Exists",
        "oneOf": [
          {
            "type": "string",
            "example": "Project already exists!"
          },
          {
            "type": "string",
            "example": "User with this username already exists! Try something else!"
          }
        ]
      }
    }
  }
}